<?xml version="1.0" encoding="UTF-8"?>
<project name="intraLibrary-Moodle" default="validate">

	<property name="builddir" value="build" />
	<property name="builddirIndividual" value="${builddir}/individual" />
	<property name="srcdir" value="src" />
	<property name="logdir" value="${builddir}/logs" />
	<property name="ignoreDirs" value="*/vendors/" />
	<property name="pluginList" value="repository/intralibrary,repository/intralibrary_upload,repository/intralibrary_upload_ims,filter/intralibrary,blocks/intralibrary" />

	<if>
		<isset property="buildNumber" />
		<then>
			<property name="archiveSuffix" value="-${buildNumber}.zip" />
		</then>
		<else>
			<property name="archiveSuffix" value=".zip" />
		</else>
	</if>

	<target name="clean">
		<echo msg="Clean..." />
		<delete dir="${builddir}" />
	</target>

	<target name="prepare" depends="clean">
		<echo msg="Prepare..." />
		<mkdir dir="${builddir}" />
		<mkdir dir="${logdir}" />
		<echo msg="Setting permissions..." />
		<exec command="chmod 777 ${builddir}" checkreturn="True" />
		<exec command="chmod 777 ${logdir}" checkreturn="True" />
	</target>

	<!-- Regular Build -->
	<target name="validate" depends="prepare,phpcs,phpmd" description="Run all validation targets (PHPMD, PHPCS, etc.)">
		<echo msg="Running Build" />
	</target>

	<!-- Build single plugin package archive -->
	<target name="build_bundle" depends="validate" description="Builds all plugins into a single zip file">
		<echo msg="Building plugins package" />
		<zip destfile="${builddir}/intralibrary-moodle-plugins${archiveSuffix}" basedir="${srcdir}" />
	</target>

	<!-- Build individual archives for each plugin -->
	<target name="build_all_plugins" depends="validate" description="Builds all plugins into individual zip files">
		<foreach list="${pluginList}" target="build_plugin" param="pluginPath" />
	</target>

	<!--Build an individual plugin -->
	<target name="build_plugin" description="Builds a specific plugin. 'pluginPath' property must be set">

		<fail message="'pluginPath' must be set" unless="pluginPath" />

		<available file="${srcdir}/${pluginPath}" property="pluginPathExists" type="dir" />
		<fail message="${pluginPath} does not exist" unless="pluginPathExists" />

		<property name="plugin" value="${pluginPath}">
			<filterchain>
				<replaceregexp><regexp pattern="/" replace="_" /></replaceregexp>
			</filterchain>
		</property>

		<property name="pluginName" value="${pluginPath}">
			<filterchain>
				<replaceregexp><regexp pattern=".*/" replace="" /></replaceregexp>
			</filterchain>
		</property>

		<mkdir dir="${builddirIndividual}" />
		<echo msg="Building ${plugin} @ ${pluginPath}" />
		<zip destfile="${builddirIndividual}/${plugin}${archiveSuffix}" basedir="${srcdir}/${pluginPath}" prefix="${pluginName}/" />
	</target>

	<!-- PHP dependency checker -->
	<target name="pdepend" description="Runs PHP Depend and saves a report">
		<echo msg="PHP Depend..." />
		<exec command="pdepend --jdepend-xml=${logdir}/jdepend.xml ${srcdir}" escape="false" />
	</target>

	<!-- PHP CodeSniffer -->
	<target name="phpcs" description="Runs PHPCS and saves a report">
		<echo msg="PHP CodeSniffer..." />
		<exec executable="phpcs" escape="false">
			<arg value="--standard=resources/CodeSniffer/Standards/moodle" />
			<arg value="--extensions=php" />
			<arg value="--ignore=${ignoreDirs}" />
			<arg value="--report=checkstyle" />
			<arg value="${srcdir}" />
			<arg value=">" />
			<arg value="${logdir}/checkstyle.xml" />
		</exec>
	</target>
	<target name="phpcs-out" description="Runs PHPCS and outputs to stdout">
		<echo msg="PHP CodeSniffer..." />
		<exec executable="phpcs" escape="false" logoutput="true">
			<arg value="--standard=resources/CodeSniffer/Standards/moodle" />
			<arg value="--extensions=php" />
			<arg value="--ignore=${ignoreDirs}" />
			<arg value="${srcdir}" />
		</exec>
	</target>

	<!-- PHP Mess Detector -->
	<target name="phpmd" description="Runs PHPMD and saves a report">
		<echo msg="PHPMD..." />

		<exec executable="phpmd" escape="false">
			<arg value="${srcdir}" />
			<arg value="xml" />
			<arg value="codesize,design,naming,unusedcode" />
			<arg value="--exclude" />
			<arg value="${ignoreDirs}" />
			<arg value=">" />
			<arg value="${logdir}/pmd.xml" />
		</exec>
	</target>
	<target name="phpmd-out" description="Runs PHPMD and outputs to stdout">
		<echo msg="PHPMD..." />
		<exec executable="phpmd" escape="false" logoutput="true">
			<arg value="${srcdir}" />
			<arg value="text" />
			<arg value="codesize,design,naming,unusedcode" />
			<arg value="--exclude" />
			<arg value="${ignoreDirs}" />
		</exec>
	</target>

</project>
